import argparse
import logging
import traceback
import sys

from xxx.core import analyze_data  # 解析本体は外部関数推奨

def setup_logging():
    """ロギングの初期化"""
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s [%(levelname)s] %(message)s"
    )

def parse_args():
    parser = argparse.ArgumentParser(description="データ解析プログラム")
    parser.add_argument("--input", required=True, help="入力ファイルパス")
    parser.add_argument("--output", required=True, help="出力ファイルパス")
    parser.add_argument("--mode", choices=["fast", "accurate"], default="fast", help="解析モード")
    return parser.parse_args()

def main():
    setup_logging()
    args = parse_args()
    try:
        logging.info("解析を開始します")
        analyze_data(args.input, args.output, args.mode)
        logging.info("解析が完了しました")
    except Exception as e:
        logging.error("例外が発生しました: %s", e)
        # 詳細なトレースバックもログに記録
        logging.error(traceback.format_exc())
        # 必要に応じてプロセスを異常終了
        sys.exit(1)

if __name__ == "__main__":
    main()