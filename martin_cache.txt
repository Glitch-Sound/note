Postgisとmartinを連携しmvtを配信している
Postgisに格納したデータが配信されないが、どのような原因が考えられるか

なお、postgisに格納されたデータを変えず、martinを再起動すると、mvtが配信されるようになる

---

なるほど、その症状だといちばん疑わしいのは Martin のタイルキャッシュです。
Martin は 2023年末以降、デフォルトで 512MB のメモリキャッシュを持ち（cache_size_mb）、無効化しない限りキャッシュのパージ手段が未実装です。つまり「一度“空タイル”を返した URL（z/x/y など）は、サーバー再起動でキャッシュが消えるまで空のまま」になり得ます。再起動で配信されるようになる、という現象と合致します。 ￼ ￼

主な原因候補（優先度順）
	1.	Martin の内部タイルキャッシュが古い
	•	既定動作で URL ごとにタイルをメモリキャッシュ（既定 512MB）。キャッシュのフラッシュ機能は未実装と開発者が明言しています。再起動でキャッシュが消え、タイルが出るようになるのはこのため。
	•	対策（開発中/頻繁更新データ向け）
	•	キャッシュを無効化：
	•	設定ファイル: cache_size_mb: 0（既定は 512。0 で無効） ￼
	•	CLI: -C 0 を付けて起動（martin -C 0 postgres://...） ￼
	•	クエリ文字列でバージョン付け（例 ...?v=20250909）して URL を変えると、キャッシュキーが変わるので回避しやすい（簡易な“キャッシュバスター”）。
	•	本番でキャッシュしたい場合は NGINX/Varnish 側でキャッシュし、パージ機能で無効化する運用に寄せる（Martin 開発者も推奨）。 ￼ ￼
	2.	ブラウザ／プロキシの HTTP キャッシュ
	•	ブラウザやリバースプロキシが空タイルを保持している可能性。Martin は 2024/06 以降 ETag/304 に対応しています。開発中は Cache-Control: no-store 相当やクエリで無効化、本番は ETag / Cache-Control を適切化。 ￼
	3.	“起動時自動ディスカバリ”の限界
	•	Martin は PostGIS のテーブル/関数を起動時に自動公開します。新規テーブル・関数や列構成の変更は、再起動まで反映されない前提（将来的な「watch/reload」要望 Issue も未解決）。 ￼ ￼
	4.	マテビュー（Materialized View）をレイヤに使っている
	•	MV はREFRESH しないと更新が見えません。Martin 再起動とは無関係なので、REFRESH MATERIALIZED VIEW CONCURRENTLY ... を運用に組み込み。 ￼

（補足）権限・スキーマ・SRID ミス等でもタイルが空になることはありますが、**「再起動だけで直る」**というパターンは上の①〜③が圧倒的に多いです。

⸻

すぐ試せる切り分け
	•	キャッシュ無効で起動して挙動確認
	•	docker-compose 例（開発時）:

services:
  martin:
    image: ghcr.io/maplibre/martin:latest
    command: ["-C","0","postgres://user:pass@db:5432/mydb"]
    # または config.yml に cache_size_mb: 0


これで即時反映されるなら原因は Martin の内部キャッシュで確定です。 ￼

	•	HTTP ヘッダ確認

curl -I http://<martin>/tiles/<layer>/<z>/<x>/<y>.mvt

ETag/Cache-Control の有無を見て、ブラウザ/プロキシ側のキャッシュも疑う。 ￼

	•	NGINX 経由の場合
開発中は proxy_cache_bypass / proxy_no_cache をクエリで切り替え（?v=... 付きのときはキャッシュしない等）。本番はパージ手順を整備。 ￼

⸻

運用のおすすめ
	•	開発・検証環境：cache_size_mb: 0（または -C 0）で即時反映を優先。
	•	本番：Martin の内部キャッシュは（現状）パージできないため、小さめ or 無効化にして**外部キャッシュ（NGINX/Varnish）**で TTL/PURGE を管理。 ￼ ￼
	•	データ構造（テーブル/関数）の変更が多い場合：リリース手順にMartin 再起動を含める（自動ディスカバリの再反映のため）。 ￼
	•	MV 利用時：更新トリガで REFRESH MATERIALIZED VIEW CONCURRENTLY を定期実行。 ￼

必要なら、あなたの compose（または systemd）や NGINX 設定に合わせた最小変更の具体例まで落とし込みます。状況（構成ファイル or CLI、NGINX の有無、レイヤ定義方法など）を教えてください。


