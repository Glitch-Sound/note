import cv2
import mediapipe as mp

# ----------- 初期化用関数 -----------
def init_pose_model(static_image_mode=False, model_complexity=1):
    mp_pose = mp.solutions.pose
    pose = mp_pose.Pose(
        static_image_mode=static_image_mode,
        model_complexity=model_complexity,
        enable_segmentation=False,
        min_detection_confidence=0.5,
        min_tracking_confidence=0.5
    )
    return pose, mp_pose

# ----------- 実行用関数 -----------
def estimate_pose(pose, image):
    # BGR→RGBに変換（mediapipeはRGB前提）
    rgb_img = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    # 推論
    results = pose.process(rgb_img)
    return results

# ----------- 使用例 -----------
if __name__ == "__main__":
    pose, mp_pose = init_pose_model()

    # 画像ファイルで実験
    image = cv2.imread("sample.jpg")
    results = estimate_pose(pose, image)

    # 可視化
    annotated_image = image.copy()
    if results.pose_landmarks:
        mp_drawing = mp.solutions.drawing_utils
        mp_drawing.draw_landmarks(
            annotated_image,
            results.pose_landmarks,
            mp_pose.POSE_CONNECTIONS
        )

    # 結果表示
    cv2.imshow('Pose Estimation', annotated_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()